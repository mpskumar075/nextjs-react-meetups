{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\SAMPAT\\\\Desktop\\\\06-onwards-to-a-bigger-project-starting-project\\\\pages\\\\[meetupId]\\\\index.js\";\nimport { Fragment } from 'react';\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\n\nfunction MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: props.meetimage,\n    title: props.title,\n    address: props.address,\n    description: props.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 1\n  }, this);\n}\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["C:/Users/SAMPAT/Desktop/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["Fragment","MeetupDetail","MeetupDetails","props","meetimage","title","address","description"],"mappings":";;AAEA,SAASA,QAAT,QAAyB,OAAzB;AAEA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC9B,sBACA,QAAC,YAAD;AACA,IAAA,KAAK,EAAEA,KAAK,CAACC,SADb;AAEA,IAAA,KAAK,EAAED,KAAK,CAACE,KAFb;AAGA,IAAA,OAAO,EAAEF,KAAK,CAACG,OAHf;AAIA,IAAA,WAAW,EAAEH,KAAK,CAACI;AAJnB;AAAA;AAAA;AAAA;AAAA,UADA;AAQC;;KATQL,a;;AAmDT,eAAeA,aAAf","sourcesContent":["import { MongoClient } from 'mongodb';\r\n\r\nimport { Fragment } from 'react';\r\n\r\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\r\n\r\nfunction MeetupDetails(props) {\r\nreturn (\r\n<MeetupDetail\r\nimage={props.meetimage}\r\ntitle={props.title}\r\naddress={props.address}\r\ndescription={props.description}\r\n/>\r\n);\r\n}\r\n\r\nexport async function getStaticPaths() {\r\nconst client = await MongoClient.connect('mongodb+srv://sampat:8ugi7mYw6C6DfLs@cluster0.nphze.mongodb.net/meetups?retryWrites=true&w=majority');\r\n    const db = client.db();\r\n\r\n    const meetupCollection = db.collection('meetups');\r\n\r\n    const meetups = await meetupCollection.find({}, {_id: 1}).toArray();\r\n\r\n    client.close();\r\n\r\n    return {\r\n        fallback: false,\r\n        paths: meetups.map(meetup => ({params: {meetupId: meetup._id.toString()} })),\r\n        \r\n         \r\n    };\r\n}\r\n\r\n\r\nexport async function getStaticProps(context) {\r\n\r\n const meetupId = context.params.meetupId;\r\n\r\nconst client = await MongoClient.connect('mongodb+srv://sampat:8ugi7mYw6C6DfLs@cluster0.nphze.mongodb.net/meetups?retryWrites=true&w=majority');\r\n    \r\n    const db = client.db();\r\n\r\n    const meetupCollection = db.collection('meetups');\r\n\r\n    const selectedMeetup = await meetupCollection.findOne({_id: meetupId});\r\n\r\n    client.close();\r\n\r\n    return {\r\n        props: {\r\n            meetupData: selectedMeetup,\r\n        },\r\n    };\r\n}\r\n\r\nexport default MeetupDetails;"]},"metadata":{},"sourceType":"module"}